# =============================================================================
# DEVELOPMENT DOCKER COMPOSE FOR ECHO NOTES
# Simplified setup for local development with hot reload
# =============================================================================

version: "3.8"

services:
  # Database service (same as production)
  db:
    image: pgvector/pgvector:0.8.0-pg17
    container_name: echo_notes_db_dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: echo_note_rag
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expose on standard port for local development
    networks:
      - echo_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d echo_note_rag"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend service (FastAPI) - Development mode
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production # Use production build but with dev environment
    container_name: echo_notes_backend_dev
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env # Use existing backend .env file
    environment:
      # Override database URL for Docker networking
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/echo_note_rag

      # Override CORS for development
      CORS_ORIGINS: http://localhost:3000,http://127.0.0.1:3000
      TRUSTED_HOSTS: localhost,127.0.0.1

      # HuggingFace cache directories
      TRANSFORMERS_CACHE: /home/appuser/.cache/huggingface
      HF_HOME: /home/appuser/.cache/huggingface
      TORCH_HOME: /home/appuser/.cache/torch
    ports:
      - "8000:8000" # Expose backend directly for development
    networks:
      - echo_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service (Next.js) - Development mode with hot reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    container_name: echo_notes_frontend_dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    ports:
      - "3000:3000" # Expose frontend directly
    volumes:
      - ./frontend:/app # Mount source code for hot reload
      - /app/node_modules # Prevent overwriting node_modules
      - /app/.next # Prevent overwriting .next build cache
    networks:
      - echo_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  pgdata_dev:
    driver: local

networks:
  echo_network_dev:
    driver: bridge
